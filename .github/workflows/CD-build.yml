name: CD

on:
  push:
    branches:
     - master
  pull_request:
    branches:
      - master

jobs:

  coverage:
    name: Deploy Coverage Results
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install macOS Dependencies
        shell: bash -l {0}
        if: runner.os == 'macOS'
        run: |
          brew tap sfarrens/sf
          brew install bigmac libomp

      - name: Check Python Version
        run: python --version

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r develop.txt
          python -m pip install twine
          python -m pip install GalSim
          python -m pip install pyqtgraph
          python -m pip install -r requirements.txt
          python -m pip install .

      - name: Run Tests
        shell: bash -l {0}
        run: |
          python setup.py test

      - name: Check distribution
        shell: bash -l {0}
        run: |
          python setup.py sdist
          twine check dist/*

  api:
    name: Deploy API Documentation
    needs: coverage
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install macOS Dependencies
        shell: bash -l {0}
        if: runner.os == 'macOS'
        run: |
          brew tap sfarrens/sf
          brew install bigmac libomp

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda install -c conda-forge pandoc
          python -m pip install --upgrade pip
          python -m pip install -r docs/requirements.txt
          python -m pip install GalSim
          python -m pip install pyqtgraph
          python -m pip install .

      - name: Build API documentation
        shell: bash -l {0}
        run: |
          sphinx-apidoc -t docs/_templates -feTMo docs/source mccd
          sphinx-build -E docs/source docs/_build

      - name: Deploy API documentation
        uses: peaceiris/actions-gh-pages@v3.5.9
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build

